#include <Wire.h>
#include "Adafruit_DRV2605.h"

int fetchserial(boolean z);

int n=0,t[]={0};
char w=0;
Adafruit_DRV2605 drv;

void setup() {
  int j=0,q=0;
  Serial.begin(9600);
  Serial.println("DRV test");
  
  j= fetchserial(false);90
  //Serial.println(n, DEC);
  j= fetchserial(true);
  
  drv.begin();

  // I2C trigger by sending 'go' command 
  drv.setMode(DRV2605_MODE_INTTRIG); // default, internal trigger when sending GO command

  drv.selectLibrary(1);
  
  for(q=0;q<w;q++){
   drv.setWaveform(q, t[q]);
   //Serial.println(t[q]);
  }
  //drv.setWaveform(0, 84);  // ramp up medium 1, see datasheet part 11.2
  //drv.setWaveform(1, 1);  // strong click 100%, see datasheet part 11.2
  drv.setWaveform(w, 0);  // end of waveforms
  Serial.println("Playing");
}

void loop() {
 //Serial.println("..");
 drv.go();
 delay(1000);
}

int fetchserial(boolean z){

  char s[]={0},i=0;
  int cr='\n';
  
  if(z==false){
  Serial.println("Enter the number of waveforms to be played.");
    
  //if (Serial.available() > 0) {
                // read the incoming byte:
               
             // n = Serial.read();
             while(n==0){
               n=Serial.parseInt();
             }
               //if (n==42){return -1;}
               
               // say what you got:
               Serial.print("I received: ");
               Serial.println(n, DEC);
               return 0;
              
               
            
      //}
        
  }
  
  
  if(z==true){
      //t[1]=0,t[2]=0;
      Serial.println("Enter the type of the waveforms.");
      w=n;
      for(i=0;i<w;i++){
      
      Serial.print("Waveform");
      Serial.println(i+1 ,DEC);
    
      //if (Serial.available() > 0) {
                // read the incoming byte:
                t[i]=0;
                while(t[i]==0){
                t[i] = Serial.parseInt();
                }
                //if (t[i]==42){t[i]=0;return -1;}
                // say what you got:
                Serial.print("I received type: ");
                Serial.println(t[i], DEC);
            //}
      }
      return 0;
  }
  
  delay(1000);
}
